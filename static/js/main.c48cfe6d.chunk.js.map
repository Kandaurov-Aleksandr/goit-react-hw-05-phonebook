{"version":3,"sources":["components/ContactsEditor/ContactEditor.js","components/ContactList/ContactList.js","components/Filter.js","components/AlertMessage/AlertMessage.js","components/App.js","index.js"],"names":["ContactEditor","state","name","number","handleChangeName","e","_this","setState","target","value","handleChangeNumber","handleSubmit","preventDefault","props","onAddContact","Object","objectSpread","id","uuidv4","_this$state","this","react_default","a","createElement","className","onSubmit","type","onChange","Component","ContactList","_ref","contacts","onRemoveContact","TransitionGroup","component","map","contact","CSSTransition","key","timeout","classNames","onClick","Filter","onChangeFilter","AlertMessage","alert","closeAlert","in","unmountOnExit","App","filter","addContact","objectContact","find","prevState","concat","toConsumableArray","removeContact","changeFilter","getFilterContact","toLowerCase","includes","toLocaleLowerCase","persistedContact","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","_this$state2","filterContact","appear","components_AlertMessage_AlertMessage","ContactEditor_ContactEditor","length","components_ContactList_ContactList","ReactDOM","render","StrictMode","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c48cfe6d.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport './ContactEditor.css'\n\nexport default class ContactEditor extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n state = {\n   name: '',\n   number: '',\n };\n\n handleChangeName = e => {\n   this.setState({\n     name: e.target.value,\n   });\n };\n\n handleChangeNumber = e => {\n   this.setState({\n     number: e.target.value,\n   });\n };\n\n handleSubmit = e => {\n   e.preventDefault();\n   this.props.onAddContact({...this.state, id: uuidv4()});\n   this.setState( { name: '', number: ''});\n };\n\n render(){\n   const { name, number } = this.state;\n   return (\n    <form className=\"ContactEditor\" onSubmit={this.handleSubmit}>\n    <label className=\"ContactEditor-label\">\n      Name\n      <input\n        className=\"ContactEditor-input\"\n        type=\"text\"\n        value={name}\n        onChange={this.handleChangeName}\n      />\n    </label>\n    <label className=\"ContactEditor-label\">\n      Number\n      <input\n        className=\"ContactEditor-input\"\n        type=\"text\"\n        value={number}\n        onChange={this.handleChangeNumber}\n      />\n    </label>\n\n    <button type=\"submit\" className=\"ContactEditor-button\">\n      Add contact\n    </button>\n  </form>\n   )\n }\n}","import React from 'react';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\nimport './ContactList.css'\n\nconst ContactList = ({ contacts, onRemoveContact}) => (\n  <TransitionGroup component='ul' className=\"ContactList\">\n    {contacts.map(contact => (\n      <CSSTransition key={contact.id} timeout={500} classNames=\"ContactList-item\">\n        <div className=\"ContactList-item\">\n          <div className=\"ContactList-text\">{contact.name}: {contact.number}</div>\n          <button\n          type=\"button\"\n          className=\"ContactList-button\"\n          onClick={() => onRemoveContact(contact.id)}\n          >\n            Delete\n          </button>\n        </div>\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nexport default ContactList;","import React from 'react';\nimport './ContactsEditor/ContactEditor.css';\n\nexport default function Filter({ value, onChangeFilter}) {\n  return (\n    <div className=\"ContactEditor\">\n      <p>Find contact by name</p>\n      <input \n      type=\"text\" \n      className=\"ContactEditor-input\" \n      value={value} \n      onChange={e => onChangeFilter(e.target.value)} \n      />\n    </div>\n  );\n}","import React from 'react';\nimport {CSSTransition} from 'react-transition-group';\nimport './AlertMessage.css';\n\nfunction AlertMessage ({alert, closeAlert}) {\n  return (\n    <CSSTransition classNames='alert' in={alert} timeout={250} unmountOnExit>\n      <div className='alert' onClick={closeAlert}>\n        <span className='alert-message'>\n          Contact already exists!\n        </span>\n      </div>\n    </CSSTransition>\n  )\n}\n\nexport default AlertMessage;","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group'\nimport ContactEditor from '../components/ContactsEditor/ContactEditor';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from \"./Filter\";\nimport AlertMessage from \"./AlertMessage/AlertMessage\"\nimport './App.css'\n\nimport PropTypes from 'prop-types';\n\nclass App extends Component  {\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n    alert: PropTypes.bool,\n  }\n  \n  state = {\n    contacts: [],\n    filter: '',\n    alert: false,\n  };\n\n  componentDidMount() {\n    const persistedContact = localStorage.getItem('contacts')\n    \n    if(persistedContact) {\n      this.setState({\n        contacts: JSON.parse(persistedContact)\n      })\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  };\n\n  addContact = objectContact => {\n    this.state.contacts.find(contact => contact.name === objectContact.name)\n    ? this.setState((prevState) => ({ alert: true }))\n      : this.setState(prevState => {\n        return {\n          contacts: [\n            ...prevState.contacts,\n            objectContact],\n        } \n      })  \n  };\n\n  closeAlert = () => {\n    this.setState((prevState) => ({ alert: !prevState.alert }));\n  };\n\n  removeContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      }\n    })\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter});\n  };\n\n  getFilterContact = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\n      );\n  };\n \n  render () {\n    const {contacts, filter, alert} = this.state;\n    const filterContact = this.getFilterContact();\n    return (\n      <div className='wrapper'>\n        <div className='header'>\n          <CSSTransition\n            in={true}\n            appear={true}\n            classNames='fade'\n            timeout={500}\n            unmountOnExit\n          >\n            <h1 className='logo'>Phonebook</h1>\n          </CSSTransition>\n\n          <AlertMessage closeAlert={this.closeAlert} alert={alert}/>\n        </div>\n        \n        <ContactEditor onAddContact={this.addContact}/>\n       \n        {contacts.length > 0 && (\n          <CSSTransition\n          in={true}\n          appear={true}\n          classNames='fade'\n          timeout={500}\n          unmountOnExit\n          >\n            <div>\n              <h2>Contacts</h2>\n              <Filter \n              value={filter} \n              onChangeFilter={this.changeFilter}/>\n              <ContactList \n              contacts={filterContact} \n              onRemoveContact={this.removeContact}/>\n            </div>\n          </CSSTransition>\n        )}\n      </div>\n    )\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}